global
        log 159.65.131.174 local0
        chroot /var/lib/haproxy
        stats socket /run/haproxy/admin.sock mode 660 level admin
        stats timeout 30s
        user haproxy
        group haproxy
        daemon
defaults
        log global
        mode http
        option httplog
        option dontlognull
        timeout connect 5s
        timeout client 25s
        timeout server 3600s
        timeout tunnel 3600s
        timeout http-keep-alive  1s
        timeout http-request    15s
        timeout queue           30s

        errorfile 400 /etc/haproxy/errors/400.http
        errorfile 403 /etc/haproxy/errors/403.http
        errorfile 408 /etc/haproxy/errors/408.http
        errorfile 500 /etc/haproxy/errors/500.http
        errorfile 502 /etc/haproxy/errors/502.http
        errorfile 503 /etc/haproxy/errors/503.http
        errorfile 504 /etc/haproxy/errors/504.http

listen stats
    bind *:9999
    option forwardfor
    stats enable
    stats refresh 10s
    stats uri /stats
    stats auth minhnhat.dev:minhnhat.dev
    stats show-legends
    stats admin if TRUE

frontend http80
        log 159.65.131.174 local0 notice
        bind *:80
        maxconn 60000
        bind *:443 ssl crt /etc/ssl/minhnhat/minhnhat-letsencrypt.pem alpn h2,http/1.1
        redirect scheme https if !{ ssl_fc }
        mode http
        timeout client 60s
        option forwardfor

        acl aclapi1 path_end -i /api1
        acl aclapi2 path_end -i /api2

        use_backend server1 if aclapi1
        use_backend server2 if aclapi2
        http-response set-header Strict-Transport-Security max-age=16000000;\ includeSubDomains;\ preload;
        default_backend web_servers

backend server1
        timeout connect 10s
        timeout server 6000s

        server app1 159.65.131.174:1111
        server app2 159.65.131.174:2222

        stick-table type ip size 1m expire 30m
        stick match src
        stick store-request src

backend server2
        timeout connect 10s
        timeout server 6000s

        server app3 159.65.131.174:3333
        server app4 159.65.131.174:4444

        stick-table type ip size 1m expire 30m
        stick match src
        stick store-request src

backend web_servers
        balance roundrobin
        option httpchk HEAD /health
        http-check expect status 200
        cookie serverid insert
        server web_servers_1 159.65.131.174:1111
        server web_servers_2 159.65.131.174:2222
        server web_servers_3 159.65.131.174:3333
        server web_servers_4 159.65.131.174:4444

        stick-table type ip size 1m expire 30m
        stick match src
        stick store-request src


# global
#         log 159.65.131.174 local0
#         chroot /var/lib/haproxy
#         stats socket /run/haproxy/admin.sock mode 660 level admin
#         stats timeout 30s
#         user haproxy
#         group haproxy
#         daemon
# defaults
#         log global
#         mode http
#         option httplog
#         option dontlognull
#         timeout connect 5s
#         timeout client 25s
#         timeout server 3600s
#         timeout tunnel 3600s
#         timeout http-keep-alive  1s
#         timeout http-request    15s
#         timeout queue           30s

#         errorfile 400 /etc/haproxy/errors/400.http
#         errorfile 403 /etc/haproxy/errors/403.http
#         errorfile 408 /etc/haproxy/errors/408.http
#         errorfile 500 /etc/haproxy/errors/500.http
#         errorfile 502 /etc/haproxy/errors/502.http
#         errorfile 503 /etc/haproxy/errors/503.http
#         errorfile 504 /etc/haproxy/errors/504.http

# listen stats
#     bind *:9999
#     option forwardfor
#     stats enable
#     stats refresh 10s
#     stats uri /stats
#     stats auth minhnhat.dev:minhnhat.dev
#     stats show-legends
#     stats admin if TRUE

# frontend https
#         log 159.65.131.174 local0 notice
#         bind *:80
#         maxconn 60000
#         bind *:443 ssl crt /etc/ssl/minhnhat/minhnhat-letsencrypt.pem alpn h2,http/1.1
#         redirect scheme https if !{ ssl_fc }
#         mode http
#         timeout client 60s
#         option forwardfor
#         default-server inter 1s rise 2 fall 1 on-marked-down shutdown-sessions # server down is disconnect with all
#         # acl aclapi1 path_end -i /api1
#         # acl aclapi2 path_end -i /api2

#         # use_backend server1 if aclapi1
#         # use_backend server2 if aclapi2
#         http-response set-header Strict-Transport-Security max-age=16000000; # includeSubDomains;\ preload;
#         default_backend web_servers

# backend server1
#         timeout connect 10s
#         timeout server 6000s

#         server app1 159.65.131.174:1111
#         server app2 159.65.131.174:2222

#         stick-table type ip size 1m expire 30m
#         stick match src
#         stick store-request src

# backend server2
#         timeout connect 10s
#         timeout server 6000s

#         server app3 159.65.131.174:3333
#         server app4 159.65.131.174:4444

#         stick-table type ip size 1m expire 30m
#         stick match src
#         stick store-request src

# backend web_servers
#         balance roundrobin
#         option httpchk HEAD /health
#         http-check expect status 200
#         cookie io prefix indirect nocache # using the `io` cookie set upon handshake
#         server web_servers_1 159.65.131.174:1111  check cookie web_servers_1 
#         server web_servers_2 159.65.131.174:2222  check cookie web_servers_2
#         server web_servers_3 159.65.131.174:3333  check cookie web_servers_3
#         # stick-table type ip size 1m expire 30m
#         # stick match src
#         # stick store-request src