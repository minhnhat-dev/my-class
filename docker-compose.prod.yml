version: "3"
services:
  node-server-1:
    build:
      context: .
      args:
        NODE_ENV: production
    container_name: node-1
    ports:
      - "1111:3000"
    environment:
      - APPID=node-1
      - NODE_ENV=production
      - MONGO_USER=${MONGO_USER}
      - MONGO_PASSWORD=${MONGO_PASSWORD}
      - SESSION_SECRET=${SESSION_SECRET}
    command: node index.js
    depends_on: 
      - mongodb
    volumes:
      - ./public/storage/images:/app/public/storage/images
    restart: always
  node-server-2:
    build:
      context: .
      args:
        NODE_ENV: production
    container_name: node-2
    environment:
      - APPID=node-2
      - NODE_ENV=production
      - MONGO_USER=${MONGO_USER}
      - MONGO_PASSWORD=${MONGO_PASSWORD}
      - SESSION_SECRET=${SESSION_SECRET}
    ports:
      - "2222:3000"
    command: node index.js
    depends_on: 
      - mongodb
    volumes:
      - ./public/storage/images:/app/public/storage/images
    restart: always
  node-server-3:
    build:
      context: .
      args:
        NODE_ENV: production
    container_name: node-3
    environment:
      - APPID=node-3
      - NODE_ENV=production
      - MONGO_USER=${MONGO_USER}
      - MONGO_PASSWORD=${MONGO_PASSWORD}
      - SESSION_SECRET=${SESSION_SECRET}
    ports:
      - "3333:3000"
    command: node index.js
    depends_on: 
      - mongodb
    volumes:
      - ./public/storage/images:/app/public/storage/images
    restart: always
  mongodb:
    image: mongo:4.2
    ports:
      - "27017:27017"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_INITDB_ROOT_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_INITDB_ROOT_PASSWORD}
    restart: always
  mongo-express:
    image: mongo-express
    depends_on:
      - mongodb
    environment:
      - ME_CONFIG_MONGODB_SERVER=mongodb
      - ME_CONFIG_MONGODB_ADMINUSERNAME=${MONGO_INITDB_ROOT_USERNAME}
      - ME_CONFIG_MONGODB_ADMINPASSWORD=${MONGO_INITDB_ROOT_PASSWORD}
    ports:
      - '8081:8081'
    volumes: 
      - mongodb:/data/db